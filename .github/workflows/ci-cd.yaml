# .github/workflows/ci-cd.yml
name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    # Method 1: Define environment variables at job level
    env:
      DOCKER_REGISTRY: ${{ secrets.DOCKER_HUB_USERNAME }}
      DOCKER_IMAGE_NAME: flask-app
      DOCKER_IMAGE_TAG: ${{ github.sha }}
      DOCKER_FULL_IMAGE: ${{ secrets.DOCKER_HUB_USERNAME }}/flask-app:${{ github.sha }}
    
    steps:
      - uses: actions/checkout@v2

      # Method 2: Set environment variable in a step
      - name: Set Docker Image Vars
        run: |
          echo "DOCKER_IMAGE=${{ secrets.DOCKER_HUB_USERNAME }}/flask-app:${{ github.sha }}" >> $GITHUB_ENV

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ env.DOCKER_FULL_IMAGE }}

      - name: Install Ansible
        run: |
          sudo apt update
          sudo apt install -y ansible

      - name: Setup PEM file
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.AWS_PEM_FILE }}" > ~/.ssh/key.pem
          chmod 400 ~/.ssh/key.pem

      # Method 1: Pass single variable
      - name: Run Ansible playbook (Simple)
        run: |
          cd ansible
          ansible-playbook -i inventory.yml playbook.yml --extra-vars "docker_image=${{ env.DOCKER_FULL_IMAGE }}"

      # Method 2: Pass multiple variables
      - name: Run Ansible playbook (Multiple vars)
        run: |
          cd ansible
          ansible-playbook -i inventory.yml playbook.yml \
            --extra-vars "docker_image=${{ env.DOCKER_FULL_IMAGE }} \
                         container_name=flask-app \
                         docker_registry=${{ env.DOCKER_REGISTRY }} \
                         environment=production"

      # Method 3: Pass variables using JSON format
      - name: Run Ansible playbook (JSON vars)
        run: |
          cd ansible
          ansible-playbook -i inventory.yml playbook.yml \
            --extra-vars '{"docker_image": "${{ env.DOCKER_FULL_IMAGE }}", 
                          "container_name": "flask-app",
                          "environment": "production"}'